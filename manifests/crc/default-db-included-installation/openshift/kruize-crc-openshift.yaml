apiVersion: v1
kind: Namespace
metadata:
  name: openshift-tuning
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgres-pv-volume  # Sets PV's name
  namespace: openshift-tuning
  labels:
    type: local  # Sets PV's type to local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi # Sets PV Volume
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pv-claim  # Sets name of PVC
  namespace: openshift-tuning
  labels:
    app: postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany  # Sets read and write access
  resources:
    requests:
      storage: 5Gi  # Sets volume size
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: openshift-tuning
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      #securityContext:      #todo
      #  runAsNonRoot: true
      #  runAsUser: 1000
      #serviceAccountName: postgres-sa
      #securityContext:
      #  runAsUser: 1001
      #  runAsGroup: 1001
      #  fsGroup: 1001
      containers:
        - name: postgres
          image: postgres:15.2
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_PASSWORD
              value: admin
            - name: POSTGRES_USER
              value: admin
            - name: POSTGRES_DB
              value: kruizeDB
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/pgsql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: openshift-tuning
  labels:
    app: postgres
spec:
  type: ClusterIP
  ports:
    - name: postgres-port
      port: 5432
      targetPort: 5432
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kruize
  labels:
    app: kruize
  namespace: openshift-tuning
spec:
  replicas: 1
  selector:
    matchLabels:
      name: kruize
  template:
    metadata:
      labels:
        app: kruize
        name: kruize
    spec:
      containers:
        - name: kruize
          image: kruize/autotune_operator:0.0.9_rm
          imagePullPolicy: Always
          env:
            - name: CLUSTER_TYPE
              value: "kubernetes"
            - name: K8S_TYPE
              value: "openshift"
            - name: AUTH_TYPE
              value: ""
            - name: AUTH_TOKEN
              value: ""
            - name: MONITORING_AGENT
              value: "prometheus"
            - name: MONITORING_SERVICE
              value: "prometheus-k8s"
            - name: MONITORING_AGENT_ENDPOINT
              value: "prometheus-k8s"
            - name: LOGGING_LEVEL
              value: "info"
            - name: ROOT_LOGGING_LEVEL
              value: "info"
            - name: DB_URL
              value: "postgres-service"
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              value: "kruizeDB"
            - name: DB_USER
              value: "admin"
            - name: DB_PASSWORD
              value: "admin"
            - name: DB_DRIVER
              value: "jdbc:postgresql://"
          ports:
            - name: kruize-port
              containerPort: 8080
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - chmod +x /home/autotune/app/target/bin/TestDBConnection && /home/autotune/app/target/bin/TestDBConnection
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: kruize
  namespace: openshift-tuning
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/metrics'
  labels:
    app: kruize
spec:
  type: NodePort
  selector:
    app: kruize
  ports:
    - name: kruize-port
      port: 8080
      targetPort: 8080
